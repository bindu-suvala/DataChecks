import { Card, CardContent, CardHeader, CardTitle, CardFooter } from "@/components/ui/card";
import { Skeleton } from "@/components/ui/skeleton";
import { Button } from "@/components/ui/button";

interface Activity {
  id: number;
  user: string;
  action: string;
  time: string;
}

interface ActivityFeedProps {
  activities: Activity[];
  loading?: boolean;
}

const ActivityFeed = ({ activities, loading = false }: ActivityFeedProps) => {
  return (
    <Card>
      <CardHeader className="px-4 py-5 border-b border-gray-200 sm:px-6">
        <CardTitle className="text-lg leading-6 font-medium text-primary-900">Recent Activity</CardTitle>
      </CardHeader>
      <CardContent className="p-4 max-h-96 overflow-y-auto">
        <ul className="space-y-4">
          {loading ? (
            Array(5).fill(0).map((_, index) => (
              <li key={index} className="bg-primary-50 p-3 rounded-md">
                <div className="flex">
                  <Skeleton className="h-8 w-8 rounded-full" />
                  <div className="ml-3">
                    <Skeleton className="h-4 w-24 mb-1" />
                    <Skeleton className="h-4 w-48 mb-1" />
                    <Skeleton className="h-3 w-16 mt-1" />
                  </div>
                </div>
              </li>
            ))
          ) : (
            activities.slice(0, 5).map((activity) => (
              <li key={activity.id} className="bg-primary-50 p-3 rounded-md">
                <div className="flex">
                  <div className="flex-shrink-0">
                    <div className={`h-8 w-8 rounded-full ${getUserColor(activity.user)} flex items-center justify-center`}>
                      <span className={`text-${getUserColor(activity.user).replace('bg-', '')}-700 text-sm font-medium`}>
                        {getInitials(activity.user)}
                      </span>
                    </div>
                  </div>
                  <div className="ml-3">
                    <p className="text-sm font-medium text-primary-900">
                      {activity.user}
                    </p>
                    <p className="text-sm text-primary-500">
                      {formatActivityAction(activity.action)}
                    </p>
                    <p className="text-xs text-primary-400 mt-1">
                      {activity.time}
                    </p>
                  </div>
                </div>
              </li>
            ))
          )}
        </ul>
      </CardContent>
      <CardFooter className="px-4 py-4 border-t border-gray-200 sm:px-6">
        <Button variant="link" className="w-full text-center text-sm font-medium text-accent-600 hover:text-accent-500">
          View All Activity
        </Button>
      </CardFooter>
    </Card>
  );
};

const getUserColor = (name: string): string => {
  const colors = ['bg-accent-100', 'bg-green-100', 'bg-blue-100', 'bg-purple-100', 'bg-yellow-100'];
  // Simple hash function to consistently pick a color based on the user name
  const index = name.split('').reduce((acc, char) => acc + char.charCodeAt(0), 0) % colors.length;
  return colors[index];
};

const getInitials = (name: string): string => {
  return name
    .split(' ')
    .map(word => word[0])
    .join('')
    .substring(0, 2)
    .toUpperCase();
};

const formatActivityAction = (action: string): React.ReactNode => {
  const parts = action.split(/<span class="font-medium">|<\/span>/);
  
  if (parts.length === 3) {
    return (
      <>
        {parts[0]}<span className="font-medium">{parts[1]}</span>{parts[2]}
      </>
    );
  }
  
  return action;
};

export default ActivityFeed;
