import { useState } from "react";
import { Link, useLocation } from "wouter";
import { Button } from "@/components/ui/button";
import { GitBranch, Menu } from "lucide-react";

const Header = () => {
  const [location] = useLocation();
  const [mobileMenuOpen, setMobileMenuOpen] = useState(false);

  const navItems = [
    { name: "Dashboard", href: "/" },
    { name: "Projects", href: "/projects" },
    { name: "Tasks", href: "/tasks" },
    { name: "Team", href: "/team" },
    { name: "Reports", href: "/reports" },
  ];

  return (
    <header className="bg-white border-b border-primary-200 sticky top-0 z-10">
      <div className="container mx-auto px-4 sm:px-6 lg:px-8">
        <div className="flex items-center justify-between h-16">
          <div className="flex items-center">
            <div className="flex-shrink-0">
              <GitBranch className="h-8 w-8 text-accent-600" />
            </div>
            <div className="ml-2 font-semibold text-xl text-primary-900">TaskFlow</div>
          </div>
          <div className="hidden md:block">
            <div className="ml-10 flex items-baseline space-x-4">
              {navItems.map((item) => (
                <Link key={item.name} href={item.href} 
                  className={`px-3 py-2 rounded-md text-sm font-medium ${
                    location === item.href 
                      ? "text-primary-900 hover:text-accent-600" 
                      : "text-primary-500 hover:text-primary-900"
                  }`}>
                  {item.name}
                </Link>
              ))}
            </div>
          </div>
          <div className="flex items-center">
            <div className="ml-3 relative">
              <div>
                <Button 
                  variant="ghost" 
                  className="bg-primary-100 text-primary-800 flex text-sm rounded-full focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-accent-500"
                  aria-expanded="false"
                  aria-haspopup="true"
                >
                  <span className="sr-only">Open user menu</span>
                  <div className="h-8 w-8 rounded-full flex items-center justify-center">
                    <span className="font-medium">JS</span>
                  </div>
                </Button>
              </div>
            </div>
            <Button
              variant="ghost"
              size="icon"
              className="ml-4 md:hidden flex items-center justify-center p-2 rounded-md text-primary-400 hover:text-primary-900 focus:outline-none focus:ring-2 focus:ring-inset focus:ring-accent-500"
              aria-controls="mobile-menu"
              aria-expanded={mobileMenuOpen}
              onClick={() => setMobileMenuOpen(!mobileMenuOpen)}
            >
              <span className="sr-only">Open main menu</span>
              <Menu className="block h-6 w-6" />
            </Button>
          </div>
        </div>
      </div>
      
      {/* Mobile menu */}
      {mobileMenuOpen && (
        <div className="md:hidden" id="mobile-menu">
          <div className="px-2 pt-2 pb-3 space-y-1 sm:px-3">
            {navItems.map((item) => (
              <Link key={item.name} href={item.href} 
                className={`block px-3 py-2 rounded-md text-base font-medium ${
                  location === item.href 
                    ? "text-primary-900 bg-primary-100" 
                    : "text-primary-500 hover:text-primary-900"
                }`}>
                {item.name}
              </Link>
            ))}
          </div>
        </div>
      )}
    </header>
  );
};

export default Header;
